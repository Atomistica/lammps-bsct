# Test

units          real

neigh_modify    delay 2 every 1

atom_style      full
bond_style      harmonic
angle_style     charmm
dihedral_style  charmmfsw
improper_style  harmonic

pair_style lj/charmmfsw/coul/charmmfsh/bsct 10 12

#pair_modify     mix arithmetic

special_bonds   charmm

read_data	 data.lammps

include		coeffs_bonded.in
include		coeffs_NONbonded.in

#kspace_style    pppm/bsct 1e-6 #uncommented for BSCT_cut!
#kspace_style    none

timestep       2.0 # 0.002 ps = 2 fs

group          	water     	type  9 10  #  9 - H, 10 - O
group          	surface    	type  8     #  8 - Au
group          	ion        	type 12     # 12 - Na+
group		        bsct_atoms	union ion surface
group		        non_bsct_atoms	subtract all bsct_atoms
group          	surfactant 	subtract all water surface ion
group          	nonwater   	subtract all water

thermo_style   custom step etotal ke pe temp press enthalpy ebond eangle &
               edihed eimp epair evdwl ecoul elong etail vol

thermo         10
thermo_modify  norm no


##############
# minimization
##############

# Use meaningful names for your LAMMPS log files.
log A_minimize.log

### Minimze the potential energy here. 
### minimize energy_tol force_tol maxiter maxeval
minimize 10e-6 10e-6 1000 1000
# Require a force tolerance of ~ 10 Kcal/mole-Angstrom
# That should correspond to about 400 kJ / (mol*nm)

# Quote from http://lammps.sandia.gov/doc/minimize.html
# Perform an energy minimization of the system, by iteratively adjusting atom
# coordinates. Iterations are terminated when one of the stopping criteria is
# satisfied. At that point the configuration will hopefully be in local
# potential energy minimum. More precisely, the configuration should
# approximate a critical point for the objective function (see below), which
# may or may not be a local minimum.
#
#    etol = stopping tolerance for energy (unitless)
#    ftol = stopping tolerance for force (force units)
#    maxiter = max iterations of minimizer
#    maxeval = max number of force/energy evaluations
#
# Either or both of the etol and ftol values can be set to 0.0, in which case
# some other criterion will terminate the minimization.

write_data     1_SDS_on_AU_111_minimized.lammps

###################
# NVT equilibration
###################

log B_nvt_equilibrate.log

#BSCT FIX SYNTAX
#fix groupID bsct atomType X V U p keyword values
#X: partial charge; V:     ;U: Hubbard energy; p: exponent
# Note that U cannot be "0"
fix charge_transfer bsct_atoms bsct nevery 100 qtot 1.0 log 3 mode 2 history 3 beta 0.1 prec 0.1 max_iter 3 type 8 0.1 1 1 1 type 12 -0.1 1 1 1

### Fill in NVT ensemble 'fix' at 298 K
fix 1 all nvt temp 300 300 100
#fix charge_transfer bsct_atoms bsct type 8 1.0 2.0 0 1 type 12 -1.0 2.0 0 1

### Constrain all hydrogen bonds as well as the HOH angle!
# CHARMM requires all bonds involving hydrogen to be rigid ("stick-like").
# What is more, the TIP3P water additionally requires the water's HOH angle
# to be fixed. Design a "fix rattle" statement fulfilling these constraints.
# You can use masses and angle types defined within the data file.
#fix rigidHbonds all rattle 1e-6 500 0 b 3 5 6
#fix rigidWaterAngles all rattle 1e-6 500 0 a 11

# Quote from http://lammps.sandia.gov/doc/fix_shake.html:
# As implemented in LAMMPS, fix rattle uses fix shake for satisfying the 
# coordinate constraints. Therefore the settings and optional keywords are
# the same for both fixes, and all the information below about SHAKE is also
# relevant for RATTLE.
# (...)
# The m constraint lists atom masses. All bonds connected to atoms of the 
# specified masses will be constrained (within a fudge factor of MASSDELTA=0.1 
# specified in fix_shake.cpp). The a constraint lists angle types. If both 
# bonds in the angle are constrained then the angle will also be constrained 
# (...)
# The fix rattle command modifies forces and velocities and thus should be
# defined after all other integration fixes in your input script. If you
# define other fixes that modify velocities or forces after fix rattle operates,
# then fix rattle will not take them into account and the overall time
# integration will typically not satisfy the RATTLE constraints. You can
# check whether the constraints work correctly by setting the value of
# RATTLE_DEBUG in src/fix_rattle.cpp to 1 and recompiling LAMMPS.
# The degrees-of-freedom removed by SHAKE bonds and angles are accounted for in
# temperature and pressure computations. Similarly, the SHAKE contribution to
# the pressure of the system (virial) is also accounted for.


### Use the 'velocity' command to give the system a finite temperature!
#velocity all create 300 123456 mom yes rot yes dist gaussian
# Make use of the 'rot' and 'mom' options and use the gaussian distribution.

# Quote from http://lammps.sandia.gov/doc/velocity.html:
# The mom and rot keywords are used by create. If mom = yes, the linear 
# momentum of the newly created ensemble of velocities is zeroed; if rot = yes,
# the angular momentum is zeroed.

dump 1 all xyz 100  B_nvt_equilibrate.dump
# dump positions every 100 time steps, i.e. every 0.2 ps

### Equilibrate for 5 ps
run             10000

write_data      1_SDS_on_AU_111_nvtEquilibrated.lammps
